---
import BookTile from '@/atoms/book-tile.astro';
import MediaTile from '@/atoms/media-tile.astro';
import PersonTile from '@/atoms/person-tile.astro';
import SectionCard from '@/atoms/section-card.astro';
import Typography from '@/atoms/typography.astro';
import VideoTile from '@/atoms/video-tile.astro';
import type { Section } from '@/types/data';
import type { Book, FavoritesSection, Media, Person, Video } from '@/types/favorites-section';
import getObjectKeys from '@/utils/getObjectKeys';

export interface Props extends FavoritesSection {}

const {
  config: { title },
  books,
  medias,
  people,
  videos,
} = Astro.props;

const favoritesData = {
  books: {
    Component: BookTile,
    ...books,
  },
  people: {
    Component: PersonTile,
    ...people,
  },
  videos: {
    Component: VideoTile,
    ...videos,
  },
  medias: {
    Component: MediaTile,
    ...medias,
  },
};

const section: Section = 'favorites';
---

<SectionCard section={section}
  ><Typography variant="section-title" id={`${section}-heading`}>{title}</Typography>
  <div class:list={['flex', 'flex-col', 'gap-16']}>
    {
      getObjectKeys(favoritesData).map((key) => {
        const { data, Component, title: subsectionTitle } = favoritesData[key];

        return (
          <div class:list={['flex', 'flex-col', 'gap-6']}>
            <Typography variant="section-subtitle">{subsectionTitle}</Typography>
            <div class:list={['flex', 'gap-8', 'flex-wrap']}>
              {data.map((value) => (
                <Component value={value as Book & Media & Person & Video} />
              ))}
            </div>
          </div>
        );
      })
    }
  </div>
</SectionCard>
