---
import type { ComponentInstance } from 'astro';

import BookTile from '@/atoms/book-tile.astro';
import MediaTile from '@/atoms/media-tile.astro';
import PersonTile from '@/atoms/person-tile.astro';
import SectionCard from '@/atoms/section-card.astro';
import Typography from '@/atoms/typography.astro';
import VideoTile from '@/atoms/video-tile.astro';
import type { Section } from '@/types/data';
import type { Book, FavoritesSection, Media, Person, Video } from '@/types/favorites-section';
import getObjectKeys from '@/utils/getObjectKeys';

export interface Props extends FavoritesSection {}

const {
  config: { title },
  books,
  medias,
  people,
  videos,
} = Astro.props;

interface FavoritesSectionWithProps<T> {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- required to avoid type casting
  Component: (_props: { value: any }) => ComponentInstance;
  data: T[];
  title: string;
}

const booksWithComponent: FavoritesSectionWithProps<Book> = {
  Component: BookTile,
  ...books,
};

const mediasWithComponent: FavoritesSectionWithProps<Media> = {
  Component: MediaTile,
  ...medias,
};

const peopleWithComponent: FavoritesSectionWithProps<Person> = {
  Component: PersonTile,
  ...people,
};

const videosWithComponent: FavoritesSectionWithProps<Video> = {
  Component: VideoTile,
  ...videos,
};

const subsections: Record<string, FavoritesSectionWithProps<Book | Media | Person | Video>> = {
  books: booksWithComponent,
  medias: mediasWithComponent,
  people: peopleWithComponent,
  videos: videosWithComponent,
};

const section: Section = 'favorites';
---

<SectionCard section={section}
  ><Typography variant="section-title" id={`${section}-heading`}>{title}</Typography>
  <div class:list={['flex', 'flex-col', 'gap-16']}>
    {
      getObjectKeys(subsections).map((key) => {
        const subsection = subsections[key];

        if (!subsection) return null;

        const { Component, data: componentData, title: subsectionTitle } = subsection;

        return (
          <div class:list={['flex', 'flex-col', 'gap-8']}>
            <Typography variant="section-subtitle" id={`${section}-${key}-heading`}>
              {subsectionTitle}
            </Typography>
            <div class:list={['flex', 'gap-8', 'flex-wrap']}>
              {componentData.map((value) => (
                <Component value={value} />
              ))}
            </div>
          </div>
        );
      })
    }
  </div>
</SectionCard>
